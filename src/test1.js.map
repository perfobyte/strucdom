{
  "version": 3,
  "sources": ["conf/NodeType.js", "conf/UnclosedHtmlTags.js", "conf/HtmlTags.js", "conf/SpaceCharacters.js", "conf/QuotesCharacters.js", "conf/RawValueTags.js", "f/Node/f/i.js", "f/Node/f/child/first.js", "f/Node/f/child/last.js", "f/Node/f/child/has_nodes.js", "f/Node/f/child/append.js", "f/Node/f/child/remove.js", "f/Node/f/sibling/next.js", "f/Node/f/sibling/previous.js", "f/Node/f/other/replace_with.js", "f/Node/f/other/remove.js", "f/Node/f/html/inner/default.js", "f/Node/f/html/inner/data.js", "f/Node/f/html/inner/i.js", "f/Node/f/html/outer/default.js", "f/Node/f/html/outer/comment.js", "f/Node/f/html/outer/attribute.js", "f/Node/f/html/outer/i.js", "f/Node/f/attribute/get.js", "f/Node/f/attribute/set.js", "f/Node/f/text_content/default.js", "f/Node/f/text_content/i.js", "f/Node/i.js", "f/parse.js", "f/document_to_string.js", "test.js"],
  "sourcesContent": ["\nexport var\n    ELEMENT_NODE = 1,\n    ATTRIBUTE_NODE = 2,\n    TEXT_NODE = 3,\n    COMMENT_NODE = 8\n;\n", "\n\nexport default [\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n    \"!doctype\",\n];\n", "export default [\n    \"a\",\n    \"abbr\",\n    \"acronym\",\n    \"address\",\n    \"applet\",\n    \"area\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"basefont\",\n    \"bdi\",\n    \"bdo\",\n    \"bgsound\",\n    \"big\",\n    \"blink\",\n    \"blockquote\",\n    \"body\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"center\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"command\",\n    \"content\",\n    \"data\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"dialog\",\n    \"dir\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"font\",\n    \"footer\",\n    \"form\",\n    \"frame\",\n    \"frameset\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"image\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"isindex\",\n    \"kbd\",\n    \"keygen\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"link\",\n    \"main\",\n    \"map\",\n    \"mark\",\n    \"marquee\",\n    \"menu\",\n    \"menuitem\",\n    \"meta\",\n    \"meter\",\n    \"nav\",\n    \"nobr\",\n    \"noembed\",\n    \"noframes\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"picture\",\n    \"plaintext\",\n    \"portal\",\n    \"pre\",\n    \"progress\",\n    \"q\",\n    \"rb\",\n    \"rp\",\n    \"rt\",\n    \"rtc\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"section\",\n    \"select\",\n    \"shadow\",\n    \"slot\",\n    \"small\",\n    \"source\",\n    \"spacer\",\n    \"span\",\n    \"strike\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"template\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"title\",\n    \"tr\",\n    \"track\",\n    \"tt\",\n    \"u\",\n    \"ul\",\n    \"var\",\n    \"video\",\n    \"wbr\",\n    \"xmp\"\n];\n", "export default [\" \", \"\\t\", \"\\n\", \"\\f\", \"\\r\"];\n", "export default ['\"', \"'\"];\n", "export default ['script', 'style'];\n", "export * from './child/i.js';\nexport * from './sibling/i.js';\n\nexport * from './other/i.js';\nexport * from './html/i.js';\n\nexport * from './attribute/i.js';\n\nexport {default as _text_content} from './text_content/i.js';\n\nexport * from \"../../../conf/i.js\";\n\nexport var\n    quote_rgx = /\"/g\n;", "export default (\n    function() {\n        return (\n            this.children[0]\n        );\n    }\n);\n", "export default (\n    function() {\n        var\n            childs = this.children\n        ;\n        return (\n            childs[childs.length - 1]\n        );\n    }\n);\n", "export default (\n    function() {\n        return (this.children.length > 0);\n    }\n);\n", "\nexport default (\n    function(node) {\n        var\n            prev_parent = node.parent\n        ;\n        return (\n            (prev_parent)\n            &&\n            (prev_parent.remove_child(node)),\n\n            (\n                node.parent = this\n            )\n            .children\n            .push(node)\n        )\n    }\n);\n", "export default (\n    function(node) {\n        var\n            i = 0,\n            childs = this.children\n        ;\n        return (\n            (node.parent = null),\n            (\n                ((i = childs.indexOf(node)) === -1)\n                ||\n                (childs.splice(i, 1))\n            ),\n            undefined\n        )\n    }\n)", "\nexport default (\n    function() {\n        var\n            parent = null,\n            childs = null,\n            i = 0\n        ;\n        return (\n            (parent = this.parent)\n            ? (\n                (\n                    (\n                        i =\n                            (\n                                childs =\n                                    parent\n                                    .children\n                            )\n                            .indexOf(this)\n                            + 1\n                    ) < childs.length\n                )\n                ? childs[i]\n                : null\n            )\n            : null\n        );\n    }\n);\n", "\nexport default (\n    function() {\n        var\n            parent = null,\n            childs = null,\n            i = 0\n        ;\n        return (\n            (parent = this.parent)\n            ? (\n                (\n                    (\n                        i = (\n                            (\n                                childs = (\n                                    parent\n                                    .children\n                                )\n                            )\n                            .indexOf(this)\n                            - 1\n                        )\n                    ) >= 0\n                )\n                ? childs[i]\n                : null\n            )\n            : null\n        );\n    }\n);\n", "\nexport default (\n    function(node) {\n        var\n            parent = null,\n            childs = null,\n            i = 0,\n\n            prev_parent = node.parent\n        ;\n        return (\n            (prev_parent)\n            &&\n            (prev_parent.remove_child(node)),\n\n            (parent = this.parent)\n            ? (\n                (this.parent = null),\n                (node.parent = parent),\n                (\n                    (\n                        childs =\n                            parent\n                            .children\n                    )[\n                        childs\n                        .indexOf(this)\n                    ] = node\n                )\n            )\n            : null\n        );\n    }\n);\n", "export default (\n    function() {\n        return this.parent.remove_child(this);\n    }\n);\n", "export default (\n    function(unclosed) {\n        var\n            childs = this.children,\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            inside = \"\",\n\n            i = 0,\n            l = childs.length,\n            node = null,\n            nodeType = 0\n        ;\n        for (;i<l;i++) {\n            if ((nodeType = (node = childs[i]).type) !== ATTRIBUTE_NODE) {\n                inside += node.outer_html(unclosed);\n            }\n        }\n        return inside;\n    }\n);\n", "export default (\n    function(unclosed) {\n        return this.data;\n    }\n);\n", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,            \n} from '../../../../../conf/NodeType.js';\n\nimport df from './default.js';\nimport data from './data.js';\n\nexport default {\n    [ELEMENT_NODE]: df,\n    [ATTRIBUTE_NODE]: data,\n    [TEXT_NODE]: data,\n    [COMMENT_NODE]: data,\n};\n", "export default (\n    function(unclosed) {\n        var\n            childs = this.children,\n\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            this_name = this.name,\n\n            v = `<${this_name}`,\n            inside = \"\",\n            \n            i = 0,\n            l = childs.length,\n\n            node = null,\n\n            name = \"\",\n            data = \"\",\n            \n            nodeType = 0\n        ;\n        for (;i<l;i++) {\n            if ((nodeType = (node = childs[i]).type) === ATTRIBUTE_NODE) {\n                v += (\n                    ` ${node.outer_html(unclosed)}`\n                );\n            }\n        }\n        return (\n            (inside = this.inner_html(unclosed))\n            ? `${v}>${inside}</${this_name}>`\n            : (\n                unclosed.includes(this_name)\n                ? `${v}>`\n                : `${v}/>`\n            )\n        );\n    }\n);\n", "export default (\n    function() {\n        return `<!--${this.data}-->`;\n    }\n);\n", "export default (\n    function() {\n        var \n            d = this.data,\n            n = this.name,\n            space = this.SpaceCharacters,\n            q = this.QuotesCharacters,\n\n            i = 0,\n            l = space.length\n        ;\n\n        return (\n            (this.data.length > 0)\n            ? (\n                d.includes('\"')\n                ? `${n}=\"${d.replace(this.quote_rgx, '&quot;')}\"`\n                : `${n}=\"${d}\"`\n            )\n            : n\n        )\n    }\n)", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,            \n} from '../../../../../conf/NodeType.js';\n\nimport df from './default.js';\nimport data from '../inner/data.js';\n\nimport comment from './comment.js';\nimport attribute from './attribute.js';\n\nexport default {\n    [ELEMENT_NODE]: df,\n    [ATTRIBUTE_NODE]: attribute,\n    [TEXT_NODE]: data,\n    [COMMENT_NODE]: comment,\n};\n", "\n\n\nexport default (\n    function(name, value) {\n        \n        var\n            childs = this.children,\n            Node = this.constructor,\n\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            i = 0,\n            l = childs.length,\n\n            node = null\n        ;\n        a: {\n            for (;i<l;i++) {\n                if (\n                    ((node=childs[i]).type === ATTRIBUTE_NODE)\n                    &&\n                    (node.name === name)\n                ) {\n                    node.data = value;\n                    node.specified ||= true;\n                    break a;\n                }\n            };\n            childs.push(new Node(\n                ATTRIBUTE_NODE,\n                name,\n                \n                null,\n                this,\n                this.ownerDocument,\n\n                value,\n                true,\n            ));\n        }\n        return undefined;\n    }\n);\n", "\n\n\nexport default (\n    function(name) {\n        \n        var\n            childs = this.children,\n            Node = this.constructor,\n\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            i = 0,\n            l = childs.length,\n            v = null,\n\n            node = null\n        ;\n        for (;i<l;i++) {\n            if (\n                ((node=childs[i]).type === ATTRIBUTE_NODE)\n                &&\n                (node.name === name)\n            ) {\n                v = node.data;\n                break;\n            }\n        };\n        return v;\n    }\n);\n", "export default (\n    function(unclosed) {\n        var\n            childs = this.children,\n\n            TEXT_NODE = this.TEXT_NODE,\n            ELEMENT_NODE = this.ELEMENT_NODE,\n\n            inside = \"\",\n\n            i = 0,\n            l = childs.length,\n\n            node = null,\n            nodeType = 0\n        ;\n        for (;i<l;i++) {\n            if ((nodeType = (node = childs[i]).type) === TEXT_NODE) {\n                inside += node.outer_html(unclosed);\n            }\n            else if (nodeType === ELEMENT_NODE) {\n                inside += node.text_content(unclosed);\n            }\n        }\n        return inside;\n    }\n);\n", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,            \n} from '../../../../conf/NodeType.js';\n\nimport df from './default.js';\nimport data from '../html/inner/data.js';\n\nexport default {\n    [ELEMENT_NODE]: df,\n    [ATTRIBUTE_NODE]: data,\n    [TEXT_NODE]: data,\n    [COMMENT_NODE]: data,\n};\n", "import * as f from './f/i.js';\n\nfunction Node(\n    type,\n    name,\n    \n    children,\n    parent,\n    ownerDocument,\n\n    data,\n    specified,\n) {\n    this.name = name;\n\n    this.children = children;\n    this.parent = parent;\n    this.ownerDocument = ownerDocument;\n\n    this.data = data;\n    this.specified = specified;\n\n    this.inner_html = this._inner_html[this.type = type];\n    this.outer_html = this._outer_html[type];\n    this.text_content = this._text_content[type];\n};\n\nNode.prototype = f;\n\nexport default Node;\n", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,\n} from '../conf/i.js';\n\n// 0 success;\n// 1 tag is not opened;\n\n\n\nexport default (\n    (v,d, i,l, unclosed, space, quotes, empty_attr_value, Node, Array) => {\n        var\n            result_code = 0,\n            c = \"\",\n            tag_name = \"\",\n\n            value = \"\",\n\n            from = i,\n\n            j = 0,\n            q = 0,\n            quote = \"\",\n\n            IN = TEXT_NODE,\n            current_parent = null,\n            current_childs = d,\n\n            is_unclosed = false,\n\n            node = null,\n\n            index = 0,\n            in_quote = false,\n\n            second_c = \"\"\n        ;\n        a: while(i<l) {\n            \n            c = v[i];\n\n            if (IN === TEXT_NODE) {\n                if (c === \"<\") {\n                    console.log(v.substring(i));\n\n\n                    (i>from) && (\n                        current_childs.push(new Node(\n                            TEXT_NODE,\n                            \"#text\",\n                            \n                            null,\n                            current_parent,\n                            d,\n\n                            v.substring(from,i),\n                            false,\n                        ))\n                    );\n\n                    if (\n                        ((second_c = v[i+1]) === '!') &&\n                        (v[i+2] === '-') &&\n                        (v[i+3] === '-')\n                    ) {\n                        from = (i += 4);\n                        \n                        while (\n                            (\n                                !(\n                                    (v[i] === \"-\") &&\n                                    (v[i+1] === \"-\") &&\n                                    (v[i+2] === \">\")\n                                )\n                            )\n                            &&\n                            (i < l)\n                        ) {\n                            i++;\n                        };\n\n                        current_childs.push(new Node(\n                            COMMENT_NODE,\n                            \"#comment\",\n                            \n                            null,\n                            current_parent,\n                            d,\n\n                            v.substring(from,i),\n                            false,\n                        ));\n\n                        from = (i += 3);\n                    }\n                    else if (second_c === \"/\") {\n                        from = (i += 2);\n                        while ((v[i]!==\">\")&&(i<l)) {i++;};\n\n                        if (\n                            current_parent\n                            &&\n                            (\n                                current_parent\n                                .name === (\n                                    tag_name = (\n                                        v\n                                        .substring(from, i)\n                                        .trim()\n                                        .toLowerCase()\n                                    )\n                                )\n                            )\n                        ) {\n                            \n                            current_childs =\n                                (current_parent = current_parent.parent)\n                                ? current_parent.children\n                                : d\n                            ;\n                        }\n                        else {\n                            current_childs =\n                                (\n                                    current_parent =\n                                        current_parent\n                                        ? current_parent.parent\n                                        : null\n                                )\n                                ? current_parent.children\n                                : d\n                            ;\n                            // result_code = 1;\n                            // break a;\n                        }\n\n                        from = (++i);\n                        IN = TEXT_NODE;\n                        continue;\n                    }\n                    else {\n                        i++;\n\n                        while ((space.includes(v[i]))&&(i<l)) {i++;}\n\n                        from = i;\n\n                        while (\n                            (i < l)\n                            &&\n                            (!(space.includes(c = v[i])))\n                            &&\n                            (c !== \">\")\n                            &&\n                            (c !== \"/\")\n                        ) {\n                            i++;\n                        };\n\n\n                        current_parent = new Node(\n                            (ELEMENT_NODE),\n                            (tag_name = v.substring(from,i).toLowerCase()),\n                            \n                            (new Array()),\n                            current_parent,\n                            d,\n\n                            \"\",\n                            false,\n                        );\n                        current_childs.push(current_parent);\n                        current_childs = current_parent.children;\n\n                        is_unclosed = unclosed.includes(tag_name);\n\n                        IN = ELEMENT_NODE;\n                    }\n                }\n                else {\n                    i++;\n                }\n            }\n            // (IN === ELEMENT_NODE)\n            else {\n                if (in_quote) {\n                    if (c === quote) {in_quote = false};\n                    i++;\n                    continue;\n                }\n                if (!in_quote && quotes.includes(c)) {\n                    quote = c;\n                    in_quote = true;\n                    i++;\n                    continue;\n                }\n\n                while ((space.includes(v[i]))&&(i<l)) {i++;}\n                c = v[i];\n\n                console.log(v.substring(i, i+10));\n                if (\n                    (c === '/') &&\n                    (v[i+1] === \">\")\n                ) {\n                    \n                    current_childs =\n                        (current_parent = current_parent.parent)\n                        ? current_parent.children\n                        : d\n                    ;\n                    \n\n                    from = (i += 2);\n                    IN = TEXT_NODE;\n                }\n\n                else if (\n                    (c === \">\")\n                ) {\n                    if (is_unclosed) {\n                        \n                        current_childs =\n                            (current_parent = current_parent.parent)\n                            ? current_parent.children\n                            : d\n                        ;\n                    }\n\n                    from = ++i;\n                    IN = TEXT_NODE;\n                }\n                else {\n                    \n                    from = i;\n                    while (\n                        ((!space.includes(c = v[i])))\n                        &&\n                        (c !== \"=\")\n                        &&\n                        (c !== \">\")\n                        &&\n                        (c !== \"/\")\n                        &&\n                        (i<l)\n                    ) {i++;}\n                    j = i;\n\n                    while ((space.includes(v[i]))&&(i<l)) {i++;}\n\n                    if ((c = v[i]) === \"=\") {\n                        i++;\n                        while ((space.includes(v[i]))&&(i<l)) {i++;}\n                        \n                        if ((c=v[i]) === \">\") {\n                            value = empty_attr_value;\n                            \n                            i++;\n                            IN = TEXT_NODE;\n                        }\n                        else {\n                            if (\n                                (index = quotes.indexOf(c)) === -1\n                            ) {\n                                q = i;\n                                while (\n                                    (!space.includes(c = v[i]))\n                                    &&\n                                    (c !== \">\")\n                                    &&\n                                    (c !== \"/\")\n                                    &&\n                                    (i<l)\n                                ) {i++;}\n                                \n                            }\n                            else {\n                                quote = quotes[index];\n\n                                q = ++i;\n                                while ((v[i]!==quote)&&(i<l)) {i++;}\n                            }\n                            value = v.substring(q,i);\n                            i++;\n                        }\n                    }\n                    else {\n                        if (c === \">\") {\n                            i++;\n                            IN = TEXT_NODE;\n                        }\n                        value = empty_attr_value;\n                    }\n                    \n                    (j > from)\n                    &&\n                    current_childs.push(\n                        new Node(\n                            ATTRIBUTE_NODE,\n                            v.substring(from,j).toLowerCase(),\n                            \n                            null,\n                            current_parent,\n                            d,\n    \n                            value,\n                            false,\n                        )\n                    );\n                };\n            }\n\n            if (i === from) {\n                \n                console.log(\"\u26A0\uFE0F stuck at\", i, \"char:\", JSON.stringify(v[i]));\n                i++;\n            }\n        };\n        return result_code;\n    }\n);\n", "\n\nexport default (\n    (document, unclosed) => {\n        var \n            i = 0,\n            l = document.length,\n            v = \"\"\n        ;\n        for(;i<l;i++){\n            v += document[i].outer_html(unclosed);\n        };\n        return v;\n    }\n);\n", "import {RawValueTags, Node, parse, SpaceCharacters, UnclosedHtmlTags, QuotesCharacters, document_to_string} from './0.js';\n\nvar v = `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Parser Stress Test</title>\n\n  <meta name=\"description\" content=\"Parser test &quot;HTML stress&quot; example with nested tags and tricky attributes.\">\n  <link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body id=\"main\" class=\"page test-page\" data-info=\"x'y&quot;z &lt;3\" hidden>\n\n  <!-- HEADER SECTION -->\n  <header class=\"header\" role=\"banner\">\n    <h1 class='title \"weird\"' data-level=\"1\">HTML Parser Test</h1>\n    <nav class=\"nav\">\n      <ul>\n        <li><a href=\"/\" title='Home \"page\"'>Home</a></li>\n        <li><a href=\"/about\" title=\"About &gt; Us\">About</a></li>\n        <li><a href=\"/contact\" disabled>Contact</a></li>\n      </ul>\n    </nav>\n  </header>\n\n  <!-- MAIN SECTION -->\n  <main>\n    <section id=\"intro\">\n      <p>Hello <b>World</b>!<br>This is a <i>stress</i> test of <code>&lt;HTML&gt;</code> parsing.</p>\n      <img src=\"photo.jpg\" alt='image > sample' width=300 height=200>\n    </section>\n\n    <!-- FORM TEST -->\n    <section id=\"form-section\">\n      <form action=\"/submit\" method=\"post\" novalidate autocomplete=\"off\">\n        <input type=\"text\" name=\"username\" placeholder=\"Enter &quot;username&quot;\" required>\n        <input type=\"password\" name=\"password\" value='p@ss\"word'>\n        <input type=\"checkbox\" name=\"agree\" checked disabled>\n        <textarea name=\"comments\">Multiline\ntext &lt;div&gt; inside textarea\nand quotes \"here\"</textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </section>\n\n    <!-- TABLE TEST -->\n    <section>\n      <table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n        <thead>\n          <tr><th>ID</th><th>Name</th><th>Value</th></tr>\n        </thead>\n        <tbody>\n          <tr><td>1</td><td>Alice</td><td>&amp;lt;test&gt;</td></tr>\n          <tr><td>2</td><td>Bob</td><td>\"quoted\"</td></tr>\n          <tr><td>3</td><td>Charlie</td><td>'single'</td></tr>\n        </tbody>\n      </table>\n    </section>\n\n    <!-- SCRIPT TEST -->\n\n    <!-- STYLE TEST -->\n    <style>\n      .weird[data-x=\"1'2'3\"]::after {\n        content: '>';\n      }\n    </style>\n\n    <!-- COMMENT EDGE CASES -->\n    <!-- single-line comment -->\n    <!-- nested <!-- fake nested --> comment -->\n\n    <!-- SVG TEST -->\n    <svg width=\"100\" height=\"100\">\n      <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" fill=\"yellow\" />\n      <text x=\"10\" y=\"90\">SVG &lt;text&gt;</text>\n    </svg>\n\n    <!-- VOID ELEMENTS -->\n    <br>\n    <hr>\n    <input type=\"hidden\" value=\"done\">\n    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"favicon.ico\">\n    <source src=\"audio.mp3\" type=\"audio/mpeg\">\n  </main>\n\n  <!-- FOOTER -->\n  <footer>\n    <p>Made with &lt;3 in 2025. Email: <a href=\"mailto:test@example.com\">test@example.com</a></p>\n  </footer>\n\n</body>\n</html>\n`;\nvar doc = [];\nvar dom = parse(\n    v,doc, 0,v.length,\n    \n    UnclosedHtmlTags, SpaceCharacters, QuotesCharacters,\n    \n    \"\",\n    \n    Node, Array,\n);\n\n\nconsole.log(document_to_string(doc,UnclosedHtmlTags));\n"],
  "mappings": "kGAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,cAAAC,IACO,IACHD,EAAe,EACfF,EAAiB,EACjBG,EAAY,EACZF,EAAe,ECHnB,IAAOG,EAAQ,CACX,OACA,OACA,KACA,MACA,QACA,KACA,MACA,QACA,OACA,OACA,QACA,SACA,QACA,MACA,UACJ,EClBA,IAAOC,EAAQ,CACX,IACA,OACA,UACA,UACA,SACA,OACA,UACA,QACA,QACA,IACA,OACA,WACA,MACA,MACA,UACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,UACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,QACA,MACA,QACA,MACA,UACA,MACA,SACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,UACA,OACA,WACA,OACA,QACA,MACA,OACA,UACA,WACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,YACA,SACA,MACA,WACA,IACA,KACA,KACA,KACA,MACA,OACA,IACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,MACA,KACJ,EC/IA,IAAOC,EAAQ,CAAC,IAAK,IAAM;AAAA,EAAM,KAAM,IAAI,ECA3C,IAAOC,EAAQ,CAAC,IAAK,GAAG,ECAxB,IAAOC,EAAQ,CAAC,SAAU,OAAO,ECAjC,IAAAC,EAAA,GAAAC,EAAAD,EAAA,oBAAAE,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,aAAAC,EAAA,aAAAC,EAAA,qBAAAC,EAAA,iBAAAC,EAAA,oBAAAC,EAAA,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",
  "names": ["NodeType_exports", "__export", "ATTRIBUTE_NODE", "COMMENT_NODE", "ELEMENT_NODE", "TEXT_NODE", "UnclosedHtmlTags_default", "HtmlTags_default", "SpaceCharacters_default", "QuotesCharacters_default", "RawValueTags_default", "i_exports", "__export", "ATTRIBUTE_NODE", "COMMENT_NODE", "ELEMENT_NODE", "HtmlTags_default", "NodeType_exports", "QuotesCharacters_default", "RawValueTags_default", "SpaceCharacters_default", "TEXT_NODE", "UnclosedHtmlTags_default", "i_default", "append_default", "first_default", "get_default", "has_nodes_default", "last_default", "next_default", "previous_default", "quote_rgx", "remove_default", "replace_with_default", "set_default", "first_default", "last_default", "childs", "has_nodes_default", "append_default", "node", "prev_parent", "remove_default", "node", "i", "childs", "next_default", "parent", "childs", "i", "previous_default", "parent", "childs", "i", "replace_with_default", "node", "parent", "childs", "i", "prev_parent", "remove_default", "default_default", "unclosed", "childs", "ATTRIBUTE_NODE", "inside", "i", "l", "node", "nodeType", "data_default", "unclosed", "i_default", "ELEMENT_NODE", "default_default", "ATTRIBUTE_NODE", "data_default", "TEXT_NODE", "COMMENT_NODE", "default_default", "unclosed", "childs", "ATTRIBUTE_NODE", "this_name", "v", "inside", "i", "l", "node", "name", "data", "nodeType", "comment_default", "attribute_default", "d", "n", "space", "q", "i", "l", "i_default", "ELEMENT_NODE", "default_default", "ATTRIBUTE_NODE", "attribute_default", "TEXT_NODE", "data_default", "COMMENT_NODE", "comment_default", "get_default", "name", "value", "childs", "Node", "ATTRIBUTE_NODE", "i", "l", "node", "a", "set_default", "name", "childs", "Node", "ATTRIBUTE_NODE", "i", "l", "v", "node", "default_default", "unclosed", "childs", "TEXT_NODE", "ELEMENT_NODE", "inside", "i", "l", "node", "nodeType", "i_default", "ELEMENT_NODE", "default_default", "ATTRIBUTE_NODE", "data_default", "TEXT_NODE", "COMMENT_NODE", "quote_rgx", "Node", "type", "name", "children", "parent", "ownerDocument", "data", "specified", "i_exports", "i_default", "parse_default", "v", "d", "i", "l", "unclosed", "space", "quotes", "empty_attr_value", "Node", "Array", "result_code", "c", "tag_name", "value", "from", "j", "q", "quote", "IN", "TEXT_NODE", "current_parent", "current_childs", "is_unclosed", "node", "index", "in_quote", "second_c", "COMMENT_NODE", "ELEMENT_NODE", "ATTRIBUTE_NODE", "document_to_string_default", "document", "unclosed", "i", "l", "v", "v", "doc", "dom", "parse_default", "UnclosedHtmlTags_default", "SpaceCharacters_default", "QuotesCharacters_default", "i_default", "document_to_string_default"]
}
