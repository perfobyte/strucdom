{
  "version": 3,
  "sources": ["conf/NodeType.js", "conf/UnclosedHtmlTags.js", "conf/HtmlTags.js", "conf/SpaceCharacters.js", "conf/QuotesCharacters.js", "conf/RawValueTags.js", "f/Node/f/i.js", "f/Node/f/child/first.js", "f/Node/f/child/last.js", "f/Node/f/child/has_nodes.js", "f/Node/f/child/append.js", "f/Node/f/child/remove.js", "f/Node/f/sibling/next.js", "f/Node/f/sibling/previous.js", "f/Node/f/other/replace_with.js", "f/Node/f/other/remove.js", "f/Node/f/html/inner/default.js", "f/Node/f/html/inner/data.js", "f/Node/f/html/inner/document.js", "f/Node/f/html/inner/i.js", "f/Node/f/html/outer/default.js", "f/Node/f/html/outer/comment.js", "f/Node/f/html/outer/attribute.js", "f/Node/f/html/outer/i.js", "f/Node/f/attribute/get.js", "f/Node/f/attribute/set.js", "f/Node/f/text_content/default.js", "f/Node/f/text_content/i.js", "f/Node/i.js", "f/parse.js", "test.js"],
  "sourcesContent": ["\nexport var\n    ELEMENT_NODE = 1,\n    ATTRIBUTE_NODE = 2,\n    TEXT_NODE = 3,\n    COMMENT_NODE = 8,\n\n    DOCUMENT_NODE = 9\n;\n", "\n\nexport default [\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n    \"!doctype\",\n];\n", "export default [\n    \"a\",\n    \"abbr\",\n    \"acronym\",\n    \"address\",\n    \"applet\",\n    \"area\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"basefont\",\n    \"bdi\",\n    \"bdo\",\n    \"bgsound\",\n    \"big\",\n    \"blink\",\n    \"blockquote\",\n    \"body\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"center\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"command\",\n    \"content\",\n    \"data\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"dialog\",\n    \"dir\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"font\",\n    \"footer\",\n    \"form\",\n    \"frame\",\n    \"frameset\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"image\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"isindex\",\n    \"kbd\",\n    \"keygen\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"link\",\n    \"main\",\n    \"map\",\n    \"mark\",\n    \"marquee\",\n    \"menu\",\n    \"menuitem\",\n    \"meta\",\n    \"meter\",\n    \"nav\",\n    \"nobr\",\n    \"noembed\",\n    \"noframes\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"picture\",\n    \"plaintext\",\n    \"portal\",\n    \"pre\",\n    \"progress\",\n    \"q\",\n    \"rb\",\n    \"rp\",\n    \"rt\",\n    \"rtc\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"section\",\n    \"select\",\n    \"shadow\",\n    \"slot\",\n    \"small\",\n    \"source\",\n    \"spacer\",\n    \"span\",\n    \"strike\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"template\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"title\",\n    \"tr\",\n    \"track\",\n    \"tt\",\n    \"u\",\n    \"ul\",\n    \"var\",\n    \"video\",\n    \"wbr\",\n    \"xmp\"\n];\n", "export default [\" \", \"\\t\", \"\\n\", \"\\f\", \"\\r\"];\n", "export default ['\"', \"'\"];\n", "export default ['script', 'style'];\n", "export * from './child/i.js';\nexport * from './sibling/i.js';\n\nexport * from './other/i.js';\nexport * from './html/i.js';\n\nexport * from './attribute/i.js';\n\nexport {default as _text_content} from './text_content/i.js';\n\nexport * from \"../../../conf/i.js\";\n\nexport var\n    quote_rgx = /\"/g\n;", "export default (\n    function() {\n        return (\n            this.children[0]\n        );\n    }\n);\n", "export default (\n    function() {\n        var\n            childs = this.children\n        ;\n        return (\n            childs[childs.length - 1]\n        );\n    }\n);\n", "export default (\n    function() {\n        return (this.children.length > 0);\n    }\n);\n", "\nexport default (\n    function(node) {\n        var\n            prev_parent = node.parent\n        ;\n        return (\n            (prev_parent)\n            &&\n            (prev_parent.remove_child(node)),\n\n            (\n                node.parent = this\n            )\n            .children\n            .push(node)\n        )\n    }\n);\n", "export default (\n    function(node) {\n        var\n            i = 0,\n            childs = this.children\n        ;\n        return (\n            (node.parent = null),\n            (\n                ((i = childs.indexOf(node)) === -1)\n                ||\n                (childs.splice(i, 1))\n            ),\n            undefined\n        )\n    }\n)", "\nexport default (\n    function() {\n        var\n            parent = null,\n            childs = null,\n            i = 0\n        ;\n        return (\n            (parent = this.parent)\n            ? (\n                (\n                    (\n                        i =\n                            (\n                                childs =\n                                    parent\n                                    .children\n                            )\n                            .indexOf(this)\n                            + 1\n                    ) < childs.length\n                )\n                ? childs[i]\n                : null\n            )\n            : null\n        );\n    }\n);\n", "\nexport default (\n    function() {\n        var\n            parent = null,\n            childs = null,\n            i = 0\n        ;\n        return (\n            (parent = this.parent)\n            ? (\n                (\n                    (\n                        i = (\n                            (\n                                childs = (\n                                    parent\n                                    .children\n                                )\n                            )\n                            .indexOf(this)\n                            - 1\n                        )\n                    ) >= 0\n                )\n                ? childs[i]\n                : null\n            )\n            : null\n        );\n    }\n);\n", "\nexport default (\n    function(node) {\n        var\n            parent = null,\n            childs = null,\n            i = 0,\n\n            prev_parent = node.parent\n        ;\n        return (\n            (prev_parent)\n            &&\n            (prev_parent.remove_child(node)),\n\n            (parent = this.parent)\n            ? (\n                (this.parent = null),\n                (node.parent = parent),\n                (\n                    (\n                        childs =\n                            parent\n                            .children\n                    )[\n                        childs\n                        .indexOf(this)\n                    ] = (\n                        node\n                    )\n                )\n            )\n            : null\n        );\n    }\n);\n", "export default (\n    function() {\n        return this.parent.remove_child(this);\n    }\n);\n", "export default (\n    function(unclosed) {\n        var\n            childs = this.children,\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            inside = \"\",\n\n            i = 0,\n            l = childs.length,\n            node = null,\n            nodeType = 0\n        ;\n        for (;i<l;i++) {\n            if ((nodeType = (node = childs[i]).type) !== ATTRIBUTE_NODE) {\n                inside += node.outer_html(unclosed);\n            }\n        }\n        return inside;\n    }\n);\n", "export default (\n    function(unclosed) {\n        return this.data;\n    }\n);\n", "\n\nexport default (\n    function(unclosed) {\n        var \n            i = 0,\n            childs = this.children,\n            l = childs.length,\n            v = \"\"\n        ;\n        for(;i<l;i++){\n            v += childs[i].outer_html(unclosed);\n        };\n        return v;\n    }\n);\n", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,\n    DOCUMENT_NODE,\n} from '../../../../../conf/NodeType.js';\n\nimport df from './default.js';\nimport data from './data.js';\nimport document from './document.js';\n\nexport default {\n    [ELEMENT_NODE]: df,\n    [ATTRIBUTE_NODE]: data,\n    [TEXT_NODE]: data,\n    [COMMENT_NODE]: data,\n    [DOCUMENT_NODE]: document,\n};\n", "export default (\n    function(unclosed) {\n        var\n            childs = this.children,\n\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            this_name = this.name,\n\n            v = `<${this_name}`,\n            inside = \"\",\n            \n            i = 0,\n            l = childs.length,\n\n            node = null,\n\n            name = \"\",\n            data = \"\",\n            \n            nodeType = 0\n        ;\n        for (;i<l;i++) {\n            if ((nodeType = (node = childs[i]).type) === ATTRIBUTE_NODE) {\n                v += (\n                    ` ${node.outer_html(unclosed)}`\n                );\n            }\n        }\n        return (\n            (inside = this.inner_html(unclosed))\n            ? `${v}>${inside}</${this_name}>`\n            : (\n                unclosed.includes(this_name)\n                ? `${v}>`\n                : `${v}/>`\n            )\n        );\n    }\n);\n", "export default (\n    function() {\n        return `<!--${this.data}-->`;\n    }\n);\n", "export default (\n    function() {\n        var \n            d = this.data,\n            n = this.name,\n            space = this.SpaceCharacters,\n            q = this.QuotesCharacters,\n\n            i = 0,\n            l = space.length\n        ;\n\n        return (\n            (this.data.length > 0)\n            ? (\n                d.includes('\"')\n                ? `${n}=\"${d.replace(this.quote_rgx, '&quot;')}\"`\n                : `${n}=\"${d}\"`\n            )\n            : n\n        )\n    }\n)", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,\n    DOCUMENT_NODE,\n} from '../../../../../conf/NodeType.js';\n\nimport df from './default.js';\nimport data from '../inner/data.js';\nimport document from '../inner/document.js';\n\nimport comment from './comment.js';\nimport attribute from './attribute.js';\n\nexport default {\n    [ELEMENT_NODE]: df,\n    [ATTRIBUTE_NODE]: attribute,\n    [TEXT_NODE]: data,\n    [COMMENT_NODE]: comment,\n    [DOCUMENT_NODE]: document,\n};\n", "\n\n\nexport default (\n    function(name, value) {\n        \n        var\n            childs = this.children,\n            Node = this.constructor,\n\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            i = 0,\n            l = childs.length,\n\n            node = null\n        ;\n        a: {\n            for (;i<l;i++) {\n                if (\n                    ((node=childs[i]).type === ATTRIBUTE_NODE)\n                    &&\n                    (node.name === name)\n                ) {\n                    node.data = value;\n                    node.specified ||= true;\n                    break a;\n                }\n            };\n            childs.push(new Node(\n                ATTRIBUTE_NODE,\n                name,\n                \n                null,\n                this,\n                this.ownerDocument,\n\n                value,\n                true,\n            ));\n        }\n        return undefined;\n    }\n);\n", "\n\n\nexport default (\n    function(name) {\n        \n        var\n            childs = this.children,\n            Node = this.constructor,\n\n            ATTRIBUTE_NODE = this.ATTRIBUTE_NODE,\n\n            i = 0,\n            l = childs.length,\n            v = null,\n\n            node = null\n        ;\n        for (;i<l;i++) {\n            if (\n                ((node=childs[i]).type === ATTRIBUTE_NODE)\n                &&\n                (node.name === name)\n            ) {\n                v = node.data;\n                break;\n            }\n        };\n        return v;\n    }\n);\n", "export default (\n    function(unclosed) {\n        var\n            childs = this.children,\n\n            TEXT_NODE = this.TEXT_NODE,\n            ELEMENT_NODE = this.ELEMENT_NODE,\n\n            inside = \"\",\n\n            i = 0,\n            l = childs.length,\n\n            node = null,\n            nodeType = 0\n        ;\n        for (;i<l;i++) {\n            if ((nodeType = (node = childs[i]).type) === TEXT_NODE) {\n                inside += node.outer_html(unclosed);\n            }\n            else if (nodeType === ELEMENT_NODE) {\n                inside += node.text_content(unclosed);\n            }\n        }\n        return inside;\n    }\n);\n", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,\n    DOCUMENT_NODE,\n} from '../../../../conf/NodeType.js';\n\nimport df from './default.js';\nimport data from '../html/inner/data.js';\nimport document from '../html/inner/document.js';\n\nexport default {\n    [ELEMENT_NODE]: df,\n    [ATTRIBUTE_NODE]: data,\n    [TEXT_NODE]: data,\n    [COMMENT_NODE]: data,\n    [DOCUMENT_NODE]: document,\n};\n", "import * as f from './f/i.js';\n\nfunction Node(\n    type,\n    name,\n    \n    children,\n    parent,\n    ownerDocument,\n\n    data,\n    specified,\n) {\n    this.name = name;\n\n    this.children = children;\n    this.parent = parent;\n    this.ownerDocument = ownerDocument;\n\n    this.data = data;\n    this.specified = specified;\n\n    this.inner_html = this._inner_html[this.type = type];\n    this.outer_html = this._outer_html[type];\n    this.text_content = this._text_content[type];\n};\n\nNode.prototype = f;\n\nexport default Node;\n", "import {\n    ELEMENT_NODE,\n    ATTRIBUTE_NODE,\n    TEXT_NODE,\n    COMMENT_NODE,\n} from '../conf/i.js';\n\n// 0 success;\n// 1 tag is not opened;\n// 2 incorrect attribute ending;\n\nexport default (\n    (v,document, i,l, unclosed, space, quotes, Node, Array) => {\n        var\n            result_code = 0,\n            j = 0,\n            q = 0,\n            index = 0,\n            from = i,\n            IN = TEXT_NODE,\n\n            attr_with_value = false,\n            is_end_tag = false,\n            is_tag_end = false,\n            is_unclosed = false,\n\n            current_parent = document,\n            current_childs = document.children,\n\n            node = null,\n\n            c = \"\",\n            tag_name = \"\",\n            value = \"\",\n            quote = \"\",\n            second_c = \"\"\n        ;\n\n        a: while(i<l) {\n            \n            c = v[i];\n\n            if (IN === TEXT_NODE) {\n\n                if (c === \"<\") {\n\n                    (i > from)\n                    &&\n                    (\n                        current_childs.push(new Node(\n                            TEXT_NODE,\n                            \"#text\",\n                            \n                            null,\n                            current_parent,\n                            document,\n\n                            v.substring(from,i),\n                            false,\n                        ))\n                    );\n\n                    if (\n                        ((second_c = v[i+1]) === '!') &&\n                        (v[i+2] === '-') &&\n                        (v[i+3] === '-')\n                    ) {\n                        from = (i += 4);\n                        \n                        while (\n                            (i < l)\n                            &&\n                            (\n                                !(\n                                    (v[i] === \"-\") &&\n                                    (v[i+1] === \"-\") &&\n                                    (v[i+2] === \">\")\n                                )\n                            )\n                        ) {\n                            i++;\n                        };\n\n                        current_childs.push(new Node(\n                            COMMENT_NODE,\n                            \"#comment\",\n                            \n                            null,\n                            current_parent,\n                            document,\n\n                            v.substring(from,i),\n                            false,\n                        ));\n\n                        from = (i += 3);\n                    }\n                    else if (\n                        second_c === \"/\"\n                    ) {\n                        from = (i += 2);\n                        while ((i<l)&&(v[i]!==\">\")) {i++;};\n\n                        if (\n                            current_parent\n                            &&\n                            (\n                                current_parent\n                                .name === (\n                                    tag_name = (\n                                        v\n                                        .substring(from, i)\n                                        .trim()\n                                        .toLowerCase()\n                                    )\n                                )\n                            )\n                        ) {\n                            \n                            current_childs = (\n                                (\n                                    current_parent =\n                                        current_parent\n                                        .parent\n                                )\n                                .children\n                            );\n                        }\n                        else {\n                            result_code = 1;\n                            break a;\n                        }\n\n                        from = (++i);\n                    }\n                    else {\n                        from = ++i;\n                        \n                        while (i < l) {\n                            c = v[i];\n                            if ((c === \">\") || (c === \"/\") || space.includes(c)) {\n                                break;\n                            };\n                            i++;\n                        }\n                        tag_name = v.substring(from, i).toLowerCase();\n                        \n                        is_tag_end = (v[i] === \">\");\n                        is_end_tag = (v[i] === \"/\" && v[i+1] === \">\");\n                        \n                        node = new Node(\n                            ELEMENT_NODE,\n                            tag_name,\n                            \n                            (new Array()),\n                            current_parent,\n                            document,\n\n                            \"\",\n                            false,\n                        );\n                        current_childs.push(node);\n\n                        is_unclosed = unclosed.includes(tag_name);\n                        \n                        current_childs = (current_parent = node).children;\n                        IN = ELEMENT_NODE;\n                    }\n                }\n                else {\n                    // text:\n                    i++;\n                }\n            }\n            \n            else {\n                // in element:\n                \n                while ((i < l) && space.includes(v[i])) i++;\n\n                is_end_tag = ((c = v[i]) === '/') && (v[i+1] === \">\");\n                is_tag_end = (c === \">\");\n                \n                if (\n                    is_end_tag\n                    ||\n                    is_tag_end\n                ) {\n                    is_unclosed\n                    &&\n                    (\n                        (current_childs = ((current_parent = current_parent.parent).children)),\n                        (is_unclosed = false)\n                    );\n                    \n                    from = (i += (is_end_tag ? 2: 1));\n                    IN = TEXT_NODE;\n                }\n                else {\n                    from = i;\n                    \n                    while (i < l) {\n\n                        if (\n                            ((c = v[i]) === \"=\") ||\n                            (c === \">\") ||\n                            (c === \"/\") ||\n                            space.includes(c)\n                        ) {\n                            break\n                        };\n                        i++;\n                    }\n                    j = i;\n                    attr_with_value = (v[i] === \"=\");\n\n                    if (attr_with_value) {\n                        i++;\n                        while ((i < l) && space.includes(v[i])) i++;\n\n                        if (\n                            (\n                                index =\n                                    quotes\n                                    .indexOf(\n                                        c = v[i]\n                                    )\n                            ) === -1\n                        ) {\n                            q = i++;\n\n                            is_end_tag =\n                            is_tag_end =\n                                false\n                            ;\n\n                            while (\n                                (is_tag_end = ((c = v[i]) === \">\")),\n                                (is_end_tag = (c === '/') && (v[i+1] === \">\")),\n\n                                (!is_tag_end)\n                                &&\n                                (!is_end_tag)\n                                &&\n                                (i < l)\n                                &&\n                                ((!(space.includes(c))))\n                            ) {\n                                i++;\n                            };\n\n                            value = v.substring(q,i);\n                        }\n                        else {\n                            q = ++i;\n                            quote = quotes[index];\n\n                            while ((i < l) && (v[i] !== quote)) i++;\n                            value = v.substring(q,i);\n\n                            if ((i < l) && (v[i] === quote)) i++;\n                            while ((i < l) && space.includes(v[i])) i++;\n\n                            is_tag_end = ((c = v[i]) === \">\");\n                            is_end_tag = (c === \"/\" && v[i+1] === \">\");\n                        }\n\n                        current_childs.push(\n                            new Node(\n                                ATTRIBUTE_NODE,\n                                v.substring(from,j).toLowerCase(),\n                                \n                                null,\n                                current_parent,\n                                document,\n        \n                                value,\n                                false,\n                            )\n                        );\n\n                        if (\n                            is_end_tag\n                            ||\n                            is_tag_end\n                        ) {\n                            is_unclosed\n                            &&\n                            (\n                                (\n                                    current_childs = (\n                                        (\n                                            current_parent =\n                                                current_parent\n                                                .parent\n                                        )\n                                        .children\n                                    )\n                                ),\n                                (is_unclosed = false)\n                            );\n                            \n                            from = (i += (is_end_tag ? 2: 1));\n                            IN = TEXT_NODE;\n                            \n                            continue;\n                        }\n                    }\n                    else if (\n                        is_end_tag\n                        ||\n                        is_tag_end\n                    ) {\n                        is_unclosed\n                        &&\n                        (\n                            (current_childs = ((current_parent = current_parent.parent).children)),\n                            (is_unclosed = false)\n                        );\n                        \n                        from = (i += (is_end_tag ? 2: 1));\n                        IN = TEXT_NODE;\n                    }\n                    else {\n                        current_childs.push(\n                            new Node(\n                                ATTRIBUTE_NODE,\n                                v.substring(from, j).toLowerCase(),\n                                null,\n                                current_parent,\n                                document,\n                                \"\",\n                                false,\n                            )\n                        );\n                    }\n                };\n            }\n        };\n        return result_code;\n    }\n);\n", "import {\n  DOCUMENT_NODE,\n  RawValueTags,\n  Node,\n  parse,\n  SpaceCharacters,\n  UnclosedHtmlTags,\n  QuotesCharacters,\n} from './0.js';\n\n(() => {\n  var\n    value = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Parser Stress Test</title>\n\n        <meta name=\"description\" content=\"Parser test &quot;HTML stress&quot; example with nested tags and tricky attributes.\">\n        <link rel=\"stylesheet\" href=\"style.css\">\n      </head>\n      <body id=\"main\" class=\"page test-page\" data-info=\"x'y&quot;z &lt;3\" hidden>\n\n        <!-- HEADER SECTION -->\n        <header class=\"header\" role=\"banner\">\n          <h1 class='title \"weird\"' data-level=\"1\">HTML Parser Test</h1>\n          <nav class=\"nav\">\n            <ul>\n              <li><a href=\"/\" title='Home \"page\"'>Home</a></li>\n              <li><a href=\"/about\" title=\"About &gt; Us\">About</a></li>\n              <li><a href=\"/contact\" disabled>Contact</a></li>\n            </ul>\n          </nav>\n        </header>\n\n        <!-- MAIN SECTION -->\n        <main>\n          <section id=\"intro\">\n            <p>Hello <b>World</b>!<br>This is a <i>stress</i> test of <code>&lt;HTML&gt;</code> parsing.</p>\n            <img src=\"photo.jpg\" alt='image > sample' width=300 height=200>\n          </section>\n\n          <!-- FORM TEST -->\n          <section id=\"form-section\">\n            <form action=\"/submit\" method=\"post\" novalidate autocomplete=\"off\">\n              <input type=\"text\" name=\"username\" placeholder=\"Enter &quot;username&quot;\" required>\n              <input type=\"password\" name=\"password\" value='p@ss\"word'>\n              <input type=\"checkbox\" name=\"agree\" checked disabled>\n              <textarea name=\"comments\">Multiline\n      text &lt;div&gt; inside textarea\n      and quotes \"here\"</textarea>\n              <button type=\"submit\">Submit</button>\n            </form>\n          </section>\n\n          <!-- TABLE TEST -->\n          <section>\n            <table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n              <thead>\n                <tr><th>ID</th><th>Name</th><th>Value</th></tr>\n              </thead>\n              <tbody>\n                <tr><td>1</td><td>Alice</td><td>&amp;lt;test&gt;</td></tr>\n                <tr><td>2</td><td>Bob</td><td>\"quoted\"</td></tr>\n                <tr><td>3</td><td>Charlie</td><td>'single'</td></tr>\n              </tbody>\n            </table>\n          </section>\n\n          <!-- SCRIPT TEST -->\n          \n\n          <!-- COMMENT EDGE CASES -->\n          <!-- single-line comment -->\n          <!-- nested <!-- fake nested --> comment -->\n\n          <!-- SVG TEST -->\n          <svg width=\"100\" height=\"100\">\n            <circle cx=\"50\" cy=\"50\" r=\"40\" stroke=\"green\" fill=\"yellow\" />\n            <text x=\"10\" y=\"90\">SVG &lt;text&gt;</text>\n          </svg>\n\n          <!-- VOID ELEMENTS -->\n          <br>\n          <hr>\n          <input type=\"hidden\" value=\"done\">\n          <meta charset=\"UTF-8\">\n          <link rel=\"icon\" href=\"favicon.ico\">\n          <source src=\"audio.mp3\" type=\"audio/mpeg\">\n        </main>\n\n        <!-- FOOTER -->\n        <footer>\n          <p>Made with &lt;3 in 2025. Email: <a href=\"mailto:test@example.com\">test@example.com</a></p>\n        </footer>\n\n      </body>\n      </html>\n    `,\n\n    Container = Array,\n\n    document = new Node(\n      DOCUMENT_NODE,\n      \"#document\",\n      \n      new Container(),\n      null,\n      null,\n\n      \"\",\n      false,\n    ),\n    \n    code = (\n      parse(\n        value, document,\n        0, value.length,\n        UnclosedHtmlTags, SpaceCharacters, QuotesCharacters,\n        Node, Container,\n      )\n    )\n  ;\n\n  return (\n    console.log(`code = ${code}`),\n    console.log(\n      document.outer_html(UnclosedHtmlTags)\n    )\n  );\n\n})();\n"],
  "mappings": "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",
  "names": ["i_default", "remove_default", "remove_default", "ATTRIBUTE_NODE", "default_default", "ATTRIBUTE_NODE", "i_default", "default_default", "Node", "ATTRIBUTE_NODE", "Node", "ATTRIBUTE_NODE", "default_default", "TEXT_NODE", "ELEMENT_NODE", "i_default", "default_default", "i_default", "Node", "Array", "i_default"]
}
